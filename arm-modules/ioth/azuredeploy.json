{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "dataProduct": {
            "type": "string",
            "metadata": {
                "description": "Use Case name"
            }
        },
        "environment": {
            "type": "string",
            "defaultValue": "d",
            "metadata": {
                "description": "Location for all services"
            }
        },
        "iotHubMessageRetentionInDays": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [ 1, 2, 3, 4, 5, 6, 7 ]
        },
        "iotHubPartitionCount": {
            "type": "int",
            "defaultValue": 2,
            "minValue": 2
        },
        "dataProductSize": {
            "type": "string",
            "defaultValue": "s",
            "allowedValues": [
                "s",
                "m",
                "l"
            ],
            "metadata": {
                "description": "Tshirt size for the data product"
            }
        },
        "countryCode": {
            "type": "string",
            "defaultValue": "cs",
            "metadata": {
                "description": "country code"
            }
        }
    },
    "variables": {
        "iothubScale": {
            "s": {
                "name": "B1",
                "capacity": 1
            },
            "m": {
                "name": "B1",
                "capacity": 1
            },
            "l": {
                "name": "S1",
                "capacity": 1
            }
        },
        "iothubSkuName": "[variables('iothubScale')[parameters('dataProductSize')].name]",
        "iothubSkuCapacity": "[variables('iothubScale')[parameters('dataProductSize')].capacity]",
        "iotHubName": "[concat(parameters('countryCode'),'-',parameters('dataProduct'),'-',parameters('environment'),'-ioth')]"
    },
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2018-04-01",
            "name": "[variables('iotHubName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('iothubSkuName')]",
                "capacity": "[variables('iothubSkuCapacity')]"
            },
            "properties": {
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": "[parameters('iotHubMessageRetentionInDays')]",
                        "partitionCount": "[parameters('iotHubPartitionCount')]"
                    },
                    "operationsMonitoringEvents": {
                        "retentionTimeInDays": "[parameters('iotHubMessageRetentionInDays')]",
                        "partitionCount": "[parameters('iotHubPartitionCount')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "IoTHubConnectionString": {
            "type": "string",
            "value": "[concat('HostName=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).hostName, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).value[0].primaryKey)]"
        },
        "IoTHubEventHubCompatibleConnectionString": {
            "type": "string",
            "value": "[concat('Endpoint=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).eventHubEndpoints.events.endpoint, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).value[0].primaryKey, ';EntityPath=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).eventHubEndpoints.events.path)]"
        }
    }
}